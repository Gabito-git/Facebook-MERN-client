{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","actions/socket.js","actions/ui.js","components/main/History.js","components/main/Histories.js","actions/uploads.js","actions/post.js","components/main/ModalPost.js","components/main/Postbox.js","components/main/ModalEditPost.js","components/main/Post.js","components/main/PostScreen.js","components/main/Sidelink.js","components/main/Sidebar.js","components/main/ModalLogout.js","components/main/TopNavigation.js","components/main/MainScreen.js","routes/PrivateRoute.js","routes/PublicRoute.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","router/AuthRouter.js","router/AppRouter.js","reducers/authReducer.js","reducers/postReducer.js","reducers/socketReducer.js","reducers/uiReducer.js","store/store.js","App.js","index.js"],"names":["baseUrl","process","fetchSinToken","body","endpoint","url","fetch","method","headers","JSON","stringify","fetchConToken","token","localStorage","getItem","fetchImages","file","formData","FormData","append","types","login","user","type","payload","finishChecking","logout","socketConnect","socket","setError","msg","setUserImage","changeModalStatus","status","changeIsLoadingStatus","History","imageBig","imageSmall","text","className","src","alt","Histories","startUploadingImage","id","dispatch","getState","a","resp","json","data","ok","image","console","log","emit","Error","Swal","fire","icon","title","startDeletingImagePost","startPost","deleted","postId","loadPosts","posts","setActive","post","cleanActive","useStyles","makeStyles","theme","root","display","justifyContent","marginLeft","spacing","ModalPost","name","useSelector","state","auth","ui","userImage","isLoading","active","useState","setBody","postImage","setPostImage","useDispatch","classes","useEffect","nodeOutsideModal","document","querySelector","handleClick","e","target","addEventListener","removeEventListener","focus","onClick","color","fontSize","Avatar","placeholder","split","onChange","value","getElementById","click","files","URL","createObjectURL","accept","CircularProgress","preventDefault","disabled","small","width","height","Postbox","modalStatus","ModalEditPost","setModal","window","deletePost","Post","updatedAt","modalOpen","setModalOpen","uid","_id","PostScreen","map","Sidelink","imageRoute","Sidebar","ModalLogout","clear","TopNavigation","MainScreen","useLayoutEffect","serverPath","io","connect","error","profileImage","on","require","Route","Redirect","PrivateRoute","Component","component","isAuthenticated","rest","props","to","PublicRoute","useForm","initialState","formState","setFormState","reset","handleInputChange","LoginScreen","email","password","onSubmit","setItem","startLogin","clientId","GOOGLE_ID_CLIENT","buttonText","onSuccess","googleUser","id_token","getAuthResponse","startGoogleSignIn","onFailure","cookiePolicy","RegisterScreen","msgError","password2","isValid","length","trim","validator","isEmail","startRegisterWithForm","AuthRouter","exact","path","AppRouter","checking","initState","authReducer","action","postReducer","socketReducer","uiReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.29173378.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (  body, endpoint  ) => {\r\n\r\n    const url =  `${ baseUrl }/${ endpoint }`;\r\n    \r\n\r\n    return fetch( url, {\r\n        method: 'POST',\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify( body )\r\n    } )\r\n   \r\n}\r\n\r\nexport const fetchConToken = ( endpoint, body, method='GET' ) => {\r\n\r\n    const url   =  `${ baseUrl }/${ endpoint }`;\r\n\r\n    const token =  localStorage.getItem( 'token' );\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            }\r\n        } )\r\n    }\r\n\r\n    return fetch( url, {\r\n        method,\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n            'x-token': token\r\n        },\r\n        body: JSON.stringify( body )\r\n    } )\r\n\r\n}\r\n\r\nexport const fetchImages = ( endpoint, file ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token =  localStorage.getItem( 'token' );\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    return fetch( url, {\r\n        method:'PUT',\r\n        headers:{\r\n            // 'Content-Type': 'application/json',\r\n            'x-token': token\r\n        },\r\n        body: formData\r\n    } )\r\n}\r\n\r\n","export const types = {\r\n    authLogin: '[Auth] Login',\r\n    authLogout: '[Auth] Logout',\r\n    authFinishChecking: '[Auth] Finish checking',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n    uiSetuserImage: '[UI] Set user image',\r\n    uiSetModalStatus: '[UI] Set modal status',\r\n    uiSetIsLoading: '[UI] Set is loading',\r\n\r\n    userUpdateImage: '[User] Update image',\r\n\r\n    postNewPost: '[Post] New post',\r\n    postGetPosts: '[Post] Get posts',\r\n    postActivePost: '[Post] Set Active Post',\r\n    postCleanActivePost: '[Post] Clean Active Post',\r\n\r\n    socket: '[Socket] Connect',\r\n};\r\n","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( 'auth/renew' );\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n\r\n                const { user, token } = body;\r\n\r\n                localStorage.setItem( 'token', token );                \r\n\r\n                dispatch( login( user ) );\r\n            }\r\n\r\n            dispatch( finishChecking() );\r\n            \r\n        } catch (error) {\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n              })\r\n            \r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startRegisterWithForm = (name, email, password) => {\r\n\r\n    return async( dispatch ) =>{\r\n\r\n        try {\r\n\r\n            const resp = await fetchSinToken( { name, email, password }, 'auth/register' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ){\r\n                const { user, token } = body;\r\n                localStorage.setItem('token', token);\r\n                dispatch( login( user ) ) \r\n            }else{\r\n                throw new Error( body.msg )\r\n            }\r\n          \r\n            \r\n        } catch (error) {\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n              })\r\n            \r\n        }        \r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startLogin = ( email, password ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchSinToken({ email, password }, 'auth/');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                const { user, token } = body;\r\n                localStorage.setItem( 'token', token );\r\n               dispatch( login( user ) )\r\n            }else{\r\n                throw new Error( body.msg );\r\n            }    \r\n            \r\n        } catch (error) {\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n              })\r\n            \r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleSignIn = ( id_token ) =>{\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchSinToken({ id_token }, 'auth/google');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n\r\n                const { user, token } = body;\r\n                localStorage.setItem( 'token', token );                \r\n                dispatch( login( user ) );\r\n\r\n            }else{\r\n                throw new Error( body.msg );\r\n            }\r\n            \r\n        } catch (error) {\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n              })\r\n        }       \r\n     \r\n    }\r\n\r\n}\r\n\r\nexport const startLogout = () => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n\r\n        dispatch( logout() );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst login = ( user ) =>({\r\n\r\n    type: types.authLogin,\r\n    payload: { user }\r\n\r\n})\r\n\r\nconst finishChecking = () => ({\r\n    type: types.authFinishChecking\r\n})\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","\r\nimport { io } from \"socket.io-client\";\r\nimport Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startSocketConnect = ( serverPath ) => {\r\n    return ( dispatch ) => {\r\n\r\n        try {\r\n            const socket = io.connect( serverPath );   \r\n            dispatch( socketConnect( socket ) )\r\n            \r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n            })\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst socketConnect = ( socket ) => ({\r\n    type: types.socket,\r\n    payload: socket\r\n})","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const startGettingUserImage = () => {\r\n\r\n    return async( dispatch ) => {\r\n        const resp = await fetchConToken('user');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            dispatch( setUserImage( body.profileImage ) );\r\n        }else{\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: body.msg,              \r\n              })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setError = (msg) => ({\r\n    type: types.uiSetError,\r\n    payload: msg,\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const setUserImage = ( url ) => ({\r\n    type: types.uiSetuserImage,\r\n    payload: url\r\n})\r\n\r\nexport const changeModalStatus = ( status ) => ({\r\n    type: types.uiSetModalStatus,\r\n    payload: status\r\n})\r\n\r\nexport const changeIsLoadingStatus = ( status ) =>({\r\n    type: types.uiSetIsLoading,\r\n    payload: status\r\n})\r\n","\nconst History = ({ imageBig, imageSmall, text }) => {\n    return (\n        <div className=\"history\">\n            <img src={ imageBig } alt=\"history\"/>\n            <p className=\"history__text\">{ text }</p>\n            <div className=\"history__img-small\">\n                <img src={ imageSmall } alt=\"history-small\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default History\n","import History from \"./History\"\n\nconst Histories = () => {\n    return (\n        <div className=\"histories\">\n            <History \n                imageBig=\"./assets/big1.jpg\"\n                imageSmall=\"./assets/small1.jpg\"\n                text=\"Diana Patricia\"\n            />\n\n            <History\n                imageBig=\"./assets/big2.jpg\"\n                imageSmall=\"./assets/small2.jpg\"\n                text=\"Rafael Diaz\"\n             />\n\n            <History \n                imageBig=\"./assets/big3.jpg\"\n                imageSmall=\"./assets/small3.jpg\"\n                text=\"Julio Sanchez\"\n            />\n\n            <History \n                imageBig=\"./assets/big4.jpg\"\n                imageSmall=\"./assets/small4.jpg\"\n                text=\"Carito Buitrago\"\n            />\n\n            <History \n                imageBig=\"./assets/big5.jpg\"\n                imageSmall=\"./assets/small4.jpg\"\n                text=\"Andrea Suarez\"\n            />\n\n            \n        </div>\n    )\n}\n\nexport default Histories\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchImages } from \"../helpers/fetch\";\r\nimport { changeIsLoadingStatus, changeModalStatus, setUserImage } from \"./ui\";\r\n\r\n// Id se refiere al id del usuario, en caso de ser una imagen de perfil, o del post, en caso de ser imagen de post\r\n\r\nexport const startUploadingImage = ( file, endpoint, id ) => {\r\n\r\n    return async( dispatch, getState) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchImages( `uploads/${ endpoint }/${ id }`, file );\r\n            const data = await resp.json();\r\n\r\n\r\n            if( data.ok ){\r\n\r\n                if( endpoint === 'users' ){\r\n                    dispatch( setUserImage( data.image ) );\r\n                }\r\n\r\n                console.log(data);\r\n    \r\n                const { socket:{ socket } } = getState();\r\n    \r\n                socket.emit('post-update')\r\n                \r\n                dispatch( changeModalStatus( false ) );\r\n            } else{\r\n                dispatch( changeIsLoadingStatus( false ) );\r\n                console.log(data.msg);\r\n                throw new Error( data.msg );                \r\n            }\r\n            \r\n            dispatch( changeIsLoadingStatus( false ) );\r\n            \r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n              })\r\n        }      \r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startDeletingImagePost = ( id ) => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( `uploads/${ id }`, {}, 'DELETE' );\r\n            const data = await resp.json();\r\n\r\n            if( !data.ok ){\r\n                throw new Error( data.msg )\r\n            }\r\n\r\n            const { socket:{ socket } } = getState();\r\n            \r\n            socket.emit('post-update')\r\n            dispatch( changeIsLoadingStatus( false ) );\r\n            dispatch( changeModalStatus( false ) );\r\n            \r\n        } catch (error) {\r\n\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n              })\r\n            \r\n        }     \r\n\r\n\r\n    }\r\n\r\n}\r\n","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport {  changeIsLoadingStatus, changeModalStatus  } from \"./ui\";\r\nimport { startDeletingImagePost, startUploadingImage } from \"./uploads\";\r\n\r\nexport const startPost = ( id, body, file, deleted ) => {    \r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        dispatch( changeIsLoadingStatus( true ) );\r\n        let resp;\r\n\r\n        id ? resp = await fetchConToken(`post/${ id }`, { body }, 'PUT')\r\n           : resp = await fetchConToken('post', {body}, 'POST')\r\n        \r\n        const data = await resp.json();\r\n        console.log( data )\r\n\r\n        if( data.ok ){            \r\n\r\n            if( file ){\r\n                dispatch( startUploadingImage( file, 'posts', data.postId ) );\r\n            }else if( deleted ){\r\n                dispatch( startDeletingImagePost( id ) );                   \r\n            } else{\r\n                const { socket:{ socket } } = getState();\r\n    \r\n                socket.emit('post-update')\r\n\r\n                dispatch( changeModalStatus( false ) );\r\n                dispatch( changeIsLoadingStatus( false ) );\r\n            }           \r\n\r\n        }   \r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startGettingPosts = () => {\r\n\r\n    return async( dispatch ) =>{\r\n\r\n        try {\r\n            const resp = await fetchConToken('post');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch( loadPosts( body.posts ) );    \r\n            }else{\r\n                throw new Error (body.msg)\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const deletePost = ( id ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { socket:{ socket } } = getState();\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`post/${ id }`, {}, 'DELETE');\r\n            const data = await resp.json();\r\n\r\n            if(!data.ok){\r\n                throw new Error( data.msg )\r\n            }\r\n\r\n            socket.emit('post-update')\r\n            \r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,              \r\n            })\r\n        }        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const loadPosts = ( posts ) => ({\r\n    type: types.postGetPosts,\r\n    payload: posts\r\n})\r\n\r\nexport const setActive = ( post ) => ({\r\n    type: types.postActivePost,\r\n    payload: post\r\n})\r\n\r\nexport const cleanActive = () => ({\r\n    type: types.postCleanActivePost\r\n})","import { Avatar, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ClearIcon from '@material-ui/icons/Clear';\nimport PublicIcon from '@material-ui/icons/Public';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { changeModalStatus } from '../../actions/ui';\nimport { cleanActive, startPost,  } from '../../actions/post';\n\nconst useStyles = makeStyles((theme) => ({  \n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n    },\n}));\n\nconst ModalPost = () => { \n\n    const { user:{ name } } = useSelector(state => state.auth);\n    const { userImage, isLoading } = useSelector(state => state.ui);\n    const { active } = useSelector(state => state.posts);\n\n    const [body, setBody] = useState(active.body);\n    const [postImage, setPostImage] = useState( active.image );\n    const dispatch = useDispatch();\n\n    const classes = useStyles();\n\n    // Establece el eventlistener en toda el area del modal post\n    // la cual es toda la ventana por como está configurado\n    // Se verifica si se da click en el area externa solamente\n    // La interna (box) tambien activaría el listener ya que es hija de la externa\n    // por eso la verificación\n    useEffect(() => {\n        const nodeOutsideModal = document.querySelector('#modal-post');        \n\n        const handleClick = (e) => {\n            if (e.target === nodeOutsideModal) {\n                dispatch( changeModalStatus( false ) )\n            }\n        };\n\n        nodeOutsideModal.addEventListener('click', handleClick);\n\n        return () => nodeOutsideModal.removeEventListener('click', handleClick);\n    }, [dispatch]);\n\n    // Establece el cursor en el text area una vez se carga el componente\n    useEffect(() => {\n        const nodeTextArea = document.querySelector('#textarea');\n        nodeTextArea.focus();\n    }, []);\n\n    const handleCloseModal = () =>{\n\n        dispatch( cleanActive() );\n        dispatch( changeModalStatus( false ) )\n    }\n\n    \n    const handleAddImageFromModal = () => {\n        document.getElementById( 'image-input-modal' ).click();\n    }\n\n    const handlePostImageFromModal = ( e) => {\n        const file = e.target.files[0];\n        setPostImage( {src:URL.createObjectURL( file ), file } );\n    }\n\n    const handleNewPost = (e) => {\n        e.preventDefault();\n\n        // Si no hay body en active quiere decir que la publicación se abrió de cero, \n        // Si hay body en active quiere decir que la publicación se va a editar\n        \n        active.body \n            ? dispatch( startPost(active.id, body, postImage.file, postImage.deleted ) )\n            : dispatch( startPost(null, body, postImage.file ) );\n\n        dispatch( cleanActive() );\n        \n    }\n\n    return (\n        <div className=\"modalPost\" id=\"modal-post\">\n            <div className=\"modalPost__box\">\n                <form>\n                    <div className=\"modalPost__header\">\n                        <div className=\"modalPost__title\">\n                            <h3>{ active.body ? 'Editar publicación': 'Crear publicación'  }</h3>\n                        </div>\n                        <div\n                            className=\"modalPost__closeIcon\"\n                            onClick={ handleCloseModal }\n                        >\n                            <ClearIcon color=\"inherit\" fontSize=\"inherit\" />\n                        </div>\n                    </div>\n\n                    <div className=\"modalPost__user-info\">\n                        <Avatar src={ userImage } />\n                        <div className=\"modalPost__user-name\">\n                            <h4>{ name }</h4>\n                            <span>\n                                <div className=\"modalPost__public\">\n                                    <PublicIcon fontSize=\"inherit\" />\n                                </div>\n                                <p>Público</p>\n                            </span>\n                        </div>\n                    </div>\n\n                    <textarea\n                        id=\"textarea\"\n                        placeholder={`¿Qué estas pensando, ${ name.split(' ')[0] } ?`}\n                        className={  `modalPost__body ${ postImage.src && \"modalPost__body--update\" }`}\n                        onChange={ (e) => setBody( e.target.value  ) }\n                        value = { body }\n                    >\n                        \n                    </textarea>\n\n                    {\n                        postImage.src &&\n                        <div className=\"modalPost__iconReference\">\n                            \n                            <div className=\"modalPost__image\">                                \n                                <img src={ postImage.src }  alt=\"user-upload\"/>\n                            </div>\n                            <div \n                                className=\"modalPost__closeImage\"\n                                onClick={ () => setPostImage({ src:'', file: null, deleted: true }) }\n                            >\n                                    <ClearIcon color=\"inherit\" fontSize=\"inherit\"/>\n                            </div>\n\n                        </div>\n                        \n                    }                   \n                   \n\n                    <div className=\"modalPost__add-image mt-2\">\n                        <p>Agregar a tu publicación</p>\n                        <div \n                            className=\"modalPost__img-icon\"\n                            onClick={ handleAddImageFromModal }\n                        >                        \n                            <PhotoLibraryIcon\n                                color=\"inherit\"\n                                fontSize=\"inherit\"\n                            />\n                        </div>\n                        <input \n                            id=\"image-input-modal\"\n                            type=\"file\"\n                            className=\"hidden\"\n                            onChange={  handlePostImageFromModal  }\n                            accept=\"image/*\"\n                        />\n                    </div>\n\n                    {\n                        !isLoading\n                        ? (\n                            <button \n                                className={`btn  block mt-2 ${ !body ? 'btn--disabled' : 'btn--primary' }  `}\n                                onClick= { handleNewPost }\n                                disabled={ isLoading || !body }\n                            >\n                                { active.body ? 'Editar': 'Publicar' }\n                            </button>\n                          )\n                        : (\n                            <div className={classes.root}>\n                                    <CircularProgress />\n                            </div>\n                          )\n                    } \n\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default ModalPost;\n","import VideocamIcon from '@material-ui/icons/Videocam';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar } from '@material-ui/core';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { changeModalStatus } from '../../actions/ui';\nimport { setActive } from '../../actions/post';\n\nimport ModalPost from './ModalPost';\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n        width: theme.spacing(4.5),\n        height: theme.spacing(4.5),\n    },\n}));\n\nconst Postbox = () => { \n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const { user:{name} } = useSelector(state => state.auth);\n    const {userImage, modalStatus} = useSelector(state => state.ui);\n\n    const handleAddImage = () => {\n        document.getElementById( 'image-input' ).click();\n    }\n\n    const handleChooseImage = ( e) => {    \n        const file = e.target.files[0];\n        dispatch( setActive({ \n            image: {\n                src:URL.createObjectURL( file ), \n                file },\n            body: ''\n            }) ) ;\n        dispatch( changeModalStatus( true ) )\n    }\n\n\n    return (\n        <div className=\"postbox\">\n            <div className=\"postbox__top\">\n                <Avatar \n                    className={classes.small} \n                    src={ userImage }\n                />\n                <div\n                    className=\"postbox__input-box\"\n                    onClick={() => dispatch( changeModalStatus( true ) )}\n                >\n                    <input\n                        placeholder={`¿Qué estas pensando, ${ name.split(' ')[0] } ?`}\n                        disabled={ modalStatus }\n                    />\n                </div>\n            </div>\n            <div className=\"postbox__bottom\">\n                <div className=\"postbox__option\">\n                    <div className=\"postbox__icon postbox__icon--red\">\n                        <VideocamIcon fontSize=\"inherit\" />\n                    </div>\n                    <p>Video en vivo</p>\n                </div>\n                <div \n                    className=\"postbox__option \"\n                    onClick={ handleAddImage }\n                >\n                    \n                    <div className=\"postbox__icon postbox__icon--green\">\n                        <PhotoLibraryIcon fontSize=\"inherit\" />\n                    </div>\n                    <p>Foto/video</p>\n                </div>\n                <input \n                    id=\"image-input\"\n                    type=\"file\"\n                    className=\"hidden\"\n                    onChange={  handleChooseImage  }\n                />\n                <div className=\"postbox__option \">\n                    <div className=\"postbox__icon postbox__icon--yellow\">\n                        <InsertEmoticonIcon fontSize=\"inherit\" />\n                    </div>\n                    <p>Sentimiento/actividad</p>\n                </div>\n            </div>\n            { modalStatus && <ModalPost />}\n        </div>\n    );\n};\n\nexport default Postbox;\n","import EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeModalStatus } from '../../actions/ui';\nimport { deletePost, setActive } from '../../actions/post';\n\nconst ModalEditPost = ({ setModal, id, body, image}) => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const handleClick = () => {\n            setModal(false);\n        };\n\n        window.addEventListener('click', handleClick);\n        return () => window.removeEventListener('click', handleClick);\n    }, [setModal]);\n\n    const handleOpenMainModal = () => {\n        dispatch( setActive( {\n            image: {\n                src: image,\n                file: null\n            },\n            body,\n            id\n        } ) )\n        dispatch( changeModalStatus( true ) )\n    }\n\n    const handleDeletePost = () =>{\n        dispatch( deletePost( id ) );\n    }\n\n    return (\n        <div className=\"edit\">\n            <div className=\"edit__top\"\n                onClick={ handleOpenMainModal }\n            >\n                <div className=\"edit__icon\">\n                    <EditOutlinedIcon fontSize=\"inherit\" />\n                </div>\n                <p>Editar publicación</p>\n            </div>\n\n            <div \n                className=\"edit__bottom\"\n                onClick = { handleDeletePost }\n            >\n                <div className=\"edit__icon\">\n                    <DeleteForeverOutlinedIcon fontSize=\"inherit\" />\n                </div>\n                <p>Mover a la papelera</p>\n            </div>\n        </div>\n    );\n};\n\nexport default ModalEditPost;\n","import { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PublicIcon from '@material-ui/icons/Public';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\nimport ForwardOutlinedIcon from '@material-ui/icons/ForwardOutlined';\nimport { useState } from 'react';\nimport ModalEditPost from './ModalEditPost';\nimport {  useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n        width: theme.spacing(4.2),\n        height: theme.spacing(4.2),\n    },\n}));\n\nconst Post = ({ user, image, body, updatedAt, id }) => {\n    const classes = useStyles();\n\n    const [modalOpen, setModalOpen] = useState(false);\n    const { userImage } = useSelector(state => state.ui);\n    const { user:{ uid } } = useSelector(state => state.auth);\n\n    return (\n        <div className=\"post animate__animated animate__fadeInDown animate__faster\">\n            <div className=\"post__header\">\n                <Avatar className={classes.small} src={ user.image }/>\n                <div className=\"post__user-info-container\">\n                    <div className=\"post__user-info\">\n                        <p>{ user.name }</p>\n                        <span>\n                           { updatedAt } <PublicIcon color=\"inherit\" />\n                        </span>\n                    </div>\n\n                    {\n                        user._id === uid \n                            &&\n                        <div\n                            className=\"post__more\"\n                            onClick={() => setModalOpen(!modalOpen)}\n                        >\n                            <MoreHorizIcon fontSize=\"inherit\" />\n                        </div>\n                    }\n                </div>\n            </div>\n\n            <div className=\"post__message\">\n                <p> { body } </p>\n            </div>\n\n            {\n                image \n                &&\n                <div className=\"post__image\">\n                    <img src={ image } alt=\"message\" />\n                </div>\n            }            \n\n            <div className=\"post__footer\">\n                <div className=\"post__options\">\n                    <div className=\"post__option\">\n                        <ThumbUpAltOutlinedIcon fontSize=\"inherit\" />\n                        <p>Me gusta</p>\n                    </div>\n\n                    <div className=\"post__option\">\n                        <ChatBubbleOutlineRoundedIcon fontSize=\"inherit\" />\n                        <p>Comentar</p>\n                    </div>\n\n                    <div className=\"post__option\">\n                        <ForwardOutlinedIcon fontSize=\"inherit\" />\n                        <p>Compartir</p>\n                    </div>\n                </div>\n\n                <div className=\"post__comment\">\n                    <Avatar className={classes.small} src={ userImage }/>\n                    <div className=\"post__input-box-comment\">\n                        <input placeholder=\"Escribe un comentario\" />\n                    </div>\n                </div>\n            </div>\n\n            {modalOpen && <ModalEditPost \n                                setModal={setModalOpen} \n                                id={ id } \n                                body={ body }\n                                image={ image }\n                        />}\n        </div>\n    );\n};\n\nexport default Post;\n","import { useSelector } from \"react-redux\";\nimport Post from \"./Post\";\n\nconst PostScreen = () => {\n\n    const { posts } = useSelector(state => state.posts)\n\n    return (\n        <div>\n            {\n                posts.map( post => <Post \n                                    key={post.id}\n                                    {...post}  \n                /> )\n            }\n        </div>\n    )\n}\n\nexport default PostScreen\n","\nconst Sidelink = ({ imageRoute, text }) => {\n    return (\n        <div className=\"sidelink\">\n            <div className=\"sidelink__img-container\">\n                <img src={ imageRoute } alt=\"link\"/>\n            </div>\n            <p>{ text }</p>\n        </div>\n    )\n}\n\nexport default Sidelink\n","import { makeStyles } from '@material-ui/core/styles';\nimport { Avatar } from '@material-ui/core';\nimport Sidelink from './Sidelink';\nimport { useSelector } from 'react-redux';\n\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n        width: theme.spacing(4.2),\n        height: theme.spacing(4.2),\n      }\n}))\n\nconst Sidebar = () => {\n\n    const classes = useStyles();\n    const { user:{ name } } = useSelector(state => state.auth);\n    const {userImage} = useSelector(state => state.ui);\n\n    return (\n        <div className=\"sidebar \">\n\n            <div className=\"sidebar__link\">\n                <div className=\"sidebar__user-info\">\n                    <Avatar \n                        className={ classes.small}\n                        src={ userImage }\n                    />\n                    <p>{ name }</p>\n                </div>\n            </div>\n\n            <div className=\"sidebar__link\">\n                <Sidelink \n                    imageRoute='./assets/squBo4GNUfh.png'\n                    text=\"COVID-19: Centro de información\"\n                 />\n            </div>\n\n            <div className=\"sidebar__link\">\n                <Sidelink \n                    imageRoute='./assets/-XF4FQcre_i.png'\n                    text=\"Amigos\"\n                 />\n            </div>\n\n            <div className=\"sidebar__link\">\n                <Sidelink \n                    imageRoute='./assets/GA7Y4WRJMp8.png'\n                    text=\"Recuerdos\"\n                 />\n            </div>\n\n            <div className=\"sidebar__link\">\n                <Sidelink \n                    imageRoute='./assets/9BDqQflVfXI.png'\n                    text=\"Marketplace\"\n                 />\n            </div>\n\n            <div className=\"sidebar__link\">\n                <Sidelink \n                    imageRoute='./assets/mk4dH3FK0jT.png'\n                    text=\"Grupos\"\n                 />\n            </div>\n\n            <div className=\"sidebar__link\">\n                <Sidelink \n                    imageRoute='./assets/A1HlI2LVo58.png'\n                    text=\"Watch\"\n                 />\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Sidebar\n","import { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startLogout } from '../../actions/auth';\nimport { startUploadingImage } from '../../actions/uploads';\nimport { changeIsLoadingStatus } from '../../actions/ui';\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    root: {\n        display: 'flex',\n        '& > * + *': {\n          marginLeft: theme.spacing(2),\n        },\n    },\n}));\n\nconst ModalLogout = () => {\n\n    const { user:{ name, uid } } = useSelector(state => state.auth);\n    const {userImage, isLoading} = useSelector(state => state.ui);\n\n\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    };\n\n    const handleAddImage = () => {\n        document.getElementById(\"image-input-user\").click();\n    }\n\n    const handleChooseImage = ( e) => {\n        const file = e.target.files[0];\n        dispatch( changeIsLoadingStatus( true ) );\n        dispatch( startUploadingImage( file, 'users', uid ) );\n    }\n\n    return (\n        <div className=\"modal\"  >\n            <div \n                className=\"modal__top\"\n                id=\"click-me\"               \n                onClick={ handleAddImage }\n            >\n                {\n                    !isLoading \n                    ?(\n                        <Avatar \n                            className={classes.small} \n                            src={ userImage }\n                        />\n                    ):(\n                        <div className={classes.root}>\n                            <CircularProgress />\n                        </div>\n                    )\n                }               \n                \n                <div className=\"modal__user-info\">\n                    <p>{ name }</p>\n                    <span>Cambia tu imagen</span>\n                </div>\n               \n            </div>\n            <input \n                id=\"image-input-user\"\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"hidden\"\n                onChange={ handleChooseImage }\n            />\n\n            <div className=\"modal__separator\"></div>\n\n            <div className=\"modal__bottom\" onClick={handleLogout}>\n                <div className=\"modal__close-icon\">\n                    <MeetingRoomIcon fontSize=\"inherit\" />\n                </div>\n                <p>Cerrar sesión</p>\n            </div>\n        </div>\n    );\n};\n\nexport default ModalLogout;\n","import { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\nimport OndemandVideoOutlinedIcon from '@material-ui/icons/OndemandVideoOutlined';\nimport StorefrontOutlinedIcon from '@material-ui/icons/StorefrontOutlined';\nimport SupervisedUserCircleOutlinedIcon from '@material-ui/icons/SupervisedUserCircleOutlined';\nimport { Avatar } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ModalLogout from './ModalLogout';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    small: {\n        width: theme.spacing(3.5),\n        height: theme.spacing(3.5),\n    },\n}));\n\nconst TopNavigation = () => {\n\n    const { user:{ name } } = useSelector(state => state.auth);\n    const {userImage} = useSelector(state => state.ui);\n    const [modalOpen, setModalOpen] = useState(false);\n    const classes = useStyles();\n\n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation__left\"> \n                <div className=\"navigation__logo\">\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg\"\n                        alt=\"facebook-logo\"\n                    />\n                </div>\n                <div className=\"navigation__search-container\">\n                    <SearchIcon fontSize=\"large\" color=\"inherit\" />\n                    <input placeholder=\"Buscar en Facebook\" />\n                </div>\n            </div>\n\n            <div className=\"navigation__center\">\n                <div className=\"navigation__icon active\">\n                    <HomeIcon fontSize=\"inherit\" color=\"inherit\" />\n                </div>\n                <div className=\"navigation__icon\">\n                    <PeopleAltOutlinedIcon fontSize=\"inherit\" color=\"inherit\" />\n                </div>\n                <div className=\"navigation__icon\">\n                    <OndemandVideoOutlinedIcon\n                        fontSize=\"inherit\"\n                        color=\"inherit\"\n                    />\n                </div>\n                <div className=\"navigation__icon\">\n                    <StorefrontOutlinedIcon\n                        fontSize=\"inherit\"\n                        color=\"inherit\"\n                    />\n                </div>\n                <div className=\"navigation__icon\">\n                    <SupervisedUserCircleOutlinedIcon\n                        fontSize=\"inherit\"\n                        color=\"inherit\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"navigation__right\">\n                <div className=\"navigation__user-info\">\n                    <Avatar \n                        className={classes.small} \n                        src={ userImage }\n                    />\n                    <p> { name.split(' ')[0] } </p>\n                </div>\n\n                <div className=\"navigation__right-icons\">\n                    <div className=\"navigation__right-icon-container\">\n                        <AddIcon fontSize=\"inherit\" />\n                    </div>\n                    <div className=\"navigation__right-icon-container\">\n                        <ForumIcon fontSize=\"inherit\" />\n                    </div>\n                    <div className=\"navigation__right-icon-container\">\n                        <NotificationsIcon fontSize=\"inherit\" />\n                    </div>\n                    <div\n                        className={`navigation__right-icon-container ${\n                            modalOpen && 'navigation__active'\n                        }`}\n                        onClick={() => setModalOpen(!modalOpen)}\n                    >\n                        <ArrowDropDownIcon fontSize=\"inherit\" />\n                    </div>\n                </div>\n            </div>\n\n            {modalOpen && <ModalLogout />}\n        </div>\n    );\n};\n\nexport default TopNavigation;\n","\nimport { useEffect, useLayoutEffect } from 'react';\nimport { useDispatch, useSelector  } from 'react-redux';\n\nimport { startSocketConnect } from '../../actions/socket';\nimport { startGettingUserImage } from '../../actions/ui';\n\nimport Histories from './Histories';\nimport Postbox from './Postbox';\nimport PostScreen from './PostScreen';\nimport Sidebar from './Sidebar';\nimport TopNavigation from './TopNavigation';\n\nimport {  loadPosts, startGettingPosts } from '../../actions/post';\n\nconst MainScreen = () => {\n\n    const dispatch = useDispatch();\n    const { socket } = useSelector(state => state.socket);\n\n    useLayoutEffect(() => {\n       dispatch( startSocketConnect('http://localhost:4000') );\n    }, [ dispatch ])\n\n    useEffect(() => {\n        dispatch( startGettingUserImage() );        \n    }, [ dispatch ])\n\n    useEffect(() => {\n        dispatch( startGettingPosts() );\n    }, [ dispatch ])\n\n    useEffect(() => {\n        if( socket ){\n            socket.on('post-update', ( posts ) => {\n                dispatch( loadPosts( posts ) )\n            })\n        }\n    }, [ socket, dispatch ])\n\n\n    return (\n        <div className=\"mainscreen\">\n            <TopNavigation />\n            <div className=\"mainscreen__body\">\n                <aside className=\"mainscreen__left\">\n                    <Sidebar />\n                </aside>\n                <main className=\"mainscreen__center\">\n                    <div className=\"mainscreen__center-content\">\n                        <Histories />\n                        <Postbox />\n                        <PostScreen />\n                    </div>                    \n                </main>   \n                <div className=\"mainscreen__right\">\n                    <img src=\"./assets/lateral.png\" alt='chat'/>\n                </div>            \n            </div>\n        </div>\n    );\n};\n\nexport default MainScreen;\n","const { Route, Redirect } = require(\"react-router\")\r\n\r\nconst PrivateRoute = ({\r\n\r\n    component: Component,\r\n    isAuthenticated,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ props => (\r\n                isAuthenticated \r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/auth/login\" />\r\n            ) }\r\n        \r\n        />           \r\n        \r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","const { Route, Redirect } = require(\"react-router\")\r\n\r\nconst PublicRoute = ({\r\n\r\n    component: Component,\r\n    isAuthenticated,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ props => (\r\n                !isAuthenticated \r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/\" />\r\n            ) }\r\n        \r\n        />           \r\n        \r\n    )\r\n}\r\n\r\nexport default PublicRoute\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [formState, setFormState] = useState( initialState );\r\n\r\n    const reset = () => {\r\n        setFormState( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( {target: {name, value}} )=>{\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n\r\n        })\r\n   }\r\n\r\n//    console.log( formState );\r\n\r\n    return {\r\n\r\n        formState,\r\n        handleInputChange, \r\n        reset\r\n\r\n    }       \r\n    \r\n};","import GoogleLogin from \"react-google-login\";\nimport { useDispatch } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { startGoogleSignIn, startLogin } from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\"\n\nconst LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { formState, handleInputChange } = useForm({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = formState;\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startLogin( email, password ) );\n    }\n\n    const googleSignIn = ( googleUser ) => {\n        const  id_token = googleUser.getAuthResponse().id_token;\n        dispatch( startGoogleSignIn( id_token ) )\n    }\n\n    const googleFail= ( error ) => {\n        console.log(error);\n    }\n\n    return (\n        <div className=\"login\">\n\n            <div>\n                <div className=\"login__facebook\">\n                    <img src=\"../assets/facebook.svg\" alt=\"facebook\" />\n                </div>\n\n                <div className=\"login__box\">\n                   \n                    <form onSubmit={ handleSubmit }>\n                        <div className=\"login__input-field\">\n                            <input \n                                className=\"login__input\"\n                                placeholder=\"Correo electrónico\"\n                                type=\"email\"\n                                name=\"email\"\n                                value={ email }\n                                onChange={ handleInputChange }\n                            />\n                        </div>\n                        <div className=\"login__input-field\">\n                            <input \n                                className=\"login__input\"\n                                type=\"password\"\n                                placeholder=\"Contraseña\"\n                                name=\"password\"\n                                value={ password }\n                                onChange={ handleInputChange }\n                            />\n                        </div>\n                        <button className=\"btn btn--primary block font-medium\">\n                            Iniciar sesión\n                        </button>\n                    </form>\n\n                    <div className=\"login__separator mt-3   \"></div>\n\n                    <div className=\"login__newuser-field\">\n                        <Link className=\"login__linkRegister\" to=\"/auth/register\" >Crear cuenta nueva</Link>\n                    </div>\n\n                    <div className=\"login__google mt-2\">                      \n                        <GoogleLogin\n                            clientId={ process.env.GOOGLE_ID_CLIENT  }\n                            buttonText=\"Inicie sesión con Google\"\n                            onSuccess={googleSignIn}\n                            onFailure={googleFail}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default LoginScreen\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport validator from 'validator';\n\nimport { startRegisterWithForm } from \"../../actions/auth\";\nimport { removeError, setError } from \"../../actions/ui\";\nimport { useForm } from \"../../hooks/useForm\";\n\n\nconst RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui);\n\n    const { formState, handleInputChange } = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    })\n\n    const {\n        name,\n        email,\n        password,\n        password2\n    } = formState;\n\n\n    const handleSubmit = ( e ) =>{\n        e.preventDefault();\n\n        if( !isValid()) return;\n\n        dispatch( startRegisterWithForm( name, email, password ) )\n    }\n\n    const isValid = () => {\n\n        if( password !== password2 || password.length < 6 ){\n            dispatch( setError( 'Las contraseñas deben coincidir y ser de una longitud mayor a 5 caracteres' ) )\n            return false;\n        }else if( name.trim() === '' ){\n            dispatch( setError('Por favor introduce un nombre'));\n            return false;\n        }else if( !validator.isEmail( email )  ){\n            dispatch( setError('Por favor ingrese un email válido') )\n            return false;\n        }\n\n        \n        dispatch( removeError() );\n        return true;\n\n    }\n\n    return (\n        <div className=\"login\">\n\n            <div className=\"login__box login__box--register\">\n                <h2>Registrarte</h2>\n                <p>Es rápido y facil</p>\n\n                <div className=\"login__separator mt-2   \"></div>\n\n                <form className=\"login__form\" onSubmit={ handleSubmit }>\n                     <div className=\"login__input-field\">\n                        <input \n                            className=\"login__input login__input--register\"\n                            placeholder=\"Nombre\"\n                            value={ name }\n                            name=\"name\"\n                            onChange={ handleInputChange }\n                        />\n                    </div>\n\n                    <div className=\"login__input-field\">\n                        <input \n                            className=\"login__input login__input--register\"\n                            type=\"email\"\n                            placeholder=\"Correo electrónico\"\n                            value={ email }\n                            name=\"email\"\n                            onChange={ handleInputChange }\n                        />\n                    </div>\n\n                    <div className=\"login__input-field\">\n                        <input \n                            className=\"login__input login__input--register\"\n                            type=\"password\"\n                            placeholder=\"Contraseña\"\n                            value={ password }\n                            name=\"password\"\n                            onChange={ handleInputChange }\n                        />\n                    </div>\n\n                    <div className=\"login__input-field\">\n                        <input \n                            className=\"login__input login__input--register\"\n                            type=\"password\"\n                            placeholder=\"Confirme la contraseña\"\n                            value={ password2 }\n                            name=\"password2\"\n                            onChange={ handleInputChange }\n                        />\n                    </div>\n\n                    {\n                        msgError  \n                            &&\n                        <div className=\"login__alert\">\n                            <p>{ msgError }</p>\n                        </div>\n\n                    }                    \n\n                    <div className=\"login__newuser-field\">\n                        <button className=\"btn btn--secondary block font-small\">\n                            Registrarte\n                        </button>\n                    </div>\n\n                </form>\n\n                <Link className=\"login__linkLogin\" to=\"/auth/login\"> Ya tienes una cuenta? </Link>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default RegisterScreen\n","import {\n    Switch,\n    Route,\n    Redirect,\n  } from \"react-router-dom\";\n\n\nimport LoginScreen from \"../components/auth/LoginScreen\";\nimport RegisterScreen from \"../components/auth/RegisterScreen\";\n\nconst AuthRouter = () => {\n    return (\n        <Switch>\n\n            <Route exact path=\"/auth/login\" component={ LoginScreen } />\n            <Route exact path=\"/auth/register\" component={ RegisterScreen } />\n\n            <Redirect to=\"/auth/login\" />\n            \n        </Switch>\n    )\n}\n\nexport default AuthRouter\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\n\nimport MainScreen from \"../components/main/MainScreen\";\nimport PrivateRoute from \"../routes/PrivateRoute\";\nimport PublicRoute from \"../routes/PublicRoute\";\nimport AuthRouter from \"./AuthRouter\";\n\nconst AppRouter = () => {\n\n    const { checking, user } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch( startChecking() );\n    }, [dispatch]);\n\n\n    if( checking ) return <h1>Wait...</h1>;\n\n    return (\n        <Router>\n\n            <div>\n\n                    <Switch>\n\n                        <PublicRoute \n                            path=\"/auth\" \n                            isAuthenticated={ !!user }\n                            component={ AuthRouter } \n                        />\n\n                        <PrivateRoute \n                             exact\n                             path=\"/\" \n                             isAuthenticated={ !!user }\n                             component={ MainScreen } \n                        />\n\n                        <Redirect to=\"/auth/login\" />\n\n                    </Switch>\n\n            </div>\n            \n        </Router>\n    )\n}\n\nexport default AppRouter\n","import { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    user: null,\r\n    checking: true\r\n}\r\n\r\nconst authReducer = ( state=initState, action) => {\r\n   \r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return { \r\n                ...state,\r\n                ...action.payload\r\n             }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                ...initState,\r\n                checking: false\r\n            }\r\n\r\n        case types.authFinishChecking:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;\r\n","import { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    posts: [],\r\n    active: {\r\n        image:{\r\n            src: '',\r\n            file: null,\r\n            deleted: false\r\n        },\r\n        body: '',\r\n        id: null\r\n    }\r\n}\r\n\r\nconst postReducer = (state=initState, action) => {\r\n\r\n    switch (action.type) {\r\n     \r\n        case types.postGetPosts:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n\r\n        case types.postActivePost:\r\n            return {\r\n                ...state,\r\n                active: action.payload\r\n            }\r\n\r\n        case types.postCleanActivePost:\r\n            return{\r\n                ...state,\r\n                active: initState.active\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default postReducer\r\n","import { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    socket: null\r\n}\r\n\r\nconst socketReducer = ( state=initState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.socket:\r\n            return{\r\n                socket: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default socketReducer\r\n","import { types } from '../types/types';\r\n\r\nconst initState = {\r\n    msgError: null,\r\n    isLoading: false,\r\n    modalStatus: false,\r\n    userImage: null\r\n};\r\n\r\nconst uiReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload,\r\n            };\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null,\r\n            };\r\n\r\n        case types.uiSetuserImage:\r\n            return{\r\n                ...state,\r\n                userImage: action.payload\r\n            }\r\n\r\n        case types.uiSetModalStatus:\r\n            return{\r\n                ...state,\r\n                modalStatus: action.payload\r\n            }\r\n\r\n        case types.uiSetIsLoading:\r\n            return{\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport postReducer from \"../reducers/postReducer\";\r\nimport socketReducer from \"../reducers/socketReducer\";\r\nimport uiReducer from \"../reducers/uiReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    posts: postReducer,\r\n    socket: socketReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore( rootReducer, composeEnhancers(\r\n    applyMiddleware( thunk )\r\n) )\r\n","import { Provider } from 'react-redux';\nimport AppRouter from './router/AppRouter';\nimport { store } from './store/store';\n\nconst App = () => {  \n\n  return (\n    <Provider store={ store }>\n      <AppRouter />\n    </Provider>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}